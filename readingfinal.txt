A database is where a computer stores its information. A computer can do this in one two ways, it can store it in models that are already set up or it can do this with models it sets as it goes along; or sequentially and non-sequentially. Sequentially is like a train that always goes along the same tracks, where as non-sequentially is like a car that that can change lanes and make unscheduled stops. The train is always going to be safer and faster, but it is constrained to the tracks it lays on, which take time to define, and alter.
These databases grow in different ways. Sequential. or preset databases, grow by throwing more computational power into them (vertically), like more servers. Non-sequential databases grow by adding more nodes closer to where the client whom is making requests.
In today's computing world there are two main database frameworks that encapsulate these differing styles. MySQL for sequential and MongoDB for non-sequential. They both have their strengths, For MySQL it can be said that it is very established. This means that is has been tried and true and that it works with many different other frameworks on different levels. This also means that once one MySQL framework has been established it can be translated into different projects and languages that are preset. Not only this but in modern sequential databases it has the added benefit of being able grow by sharding, which is what gives nonsequential its power and appeal.
Here are some of the benefits non-sequential can provide for databases; flexibility that train-tracks do not offer, built in scale-ability and much less upkeep. It also performs much faster given the code is written by a proficient engineer. It is also flexible, in that if a company decides to add to what it is storing, the company can do so without having to rework the entire database framework.
There is plenty to think about here, depending on how established and the intricacies of your database, but one thing is for sure; young companies would benefit from non-sequential databases like MongoDB.